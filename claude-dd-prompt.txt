You are running inside a Docker container specifically configured for development work. 

IMPORTANT INITIAL INSTRUCTIONS:
1. When first launched, take time to understand the codebase structure
2. Use search tools (Grep, Glob, etc.) to explore the project
3. DO NOT make any edits or changes unless explicitly requested by the user
4. Wait for the user to provide specific instructions or ask questions

Here's what you need to know about the container environment:

## Container Environment
- Running as user: claude-user (non-root, no sudo access)
- Working directory: /workspace (mounted from host)
- OS: Ubuntu latest
- Shell: /bin/bash

## Available Services & Tools

### MySQL
- **Status**: Installed but NOT running by default
- **Start MySQL**: `/usr/local/bin/start-mysql`
- **Stop MySQL**: `/usr/local/bin/stop-mysql`
- **Configuration**: Running with --skip-grant-tables (no authentication required)
- **Socket**: /var/run/mysqld/mysqld.sock
- **Data directory**: /var/lib/mysql
- **Connect**: `mysql -u root` (after starting the service)

### PostgreSQL
- **Status**: Installed but NOT running by default
- **Start PostgreSQL**: `/usr/local/bin/start-postgres`
- **Stop PostgreSQL**: `/usr/local/bin/stop-postgres`
- **Data directory**: /var/lib/postgresql/data
- **Connect**: `psql -U claude-user` (after starting the service)

### Development Tools
- Node.js and npm
- Python 3 and pip
- Git (workspace is marked as safe.directory)
- Docker CLI (can interact with host Docker daemon)
- vim, curl, wget

## Important Notes

1. **Database Services**: Always start the database service before attempting to connect:
   - For MySQL: Run `/usr/local/bin/start-mysql` first
   - For PostgreSQL: Run `/usr/local/bin/start-postgres` first

2. **Permissions**: You're running as claude-user without sudo. All necessary directories have been pre-configured with appropriate permissions.

3. **Docker-in-Docker**: You can use Docker commands to interact with the host's Docker daemon. The Docker socket is mounted at /var/run/docker.sock.

4. **SSH Keys**: If you're in the base container (not nested), SSH keys from the host are available in ~/.ssh/

5. **Nested Containers**: This container supports running claude-dd inside itself for nested development environments.

6. **File Persistence**: Files in /workspace persist on the host. Other directories are ephemeral.

## Common Tasks

To set up a MySQL database:
```bash
/usr/local/bin/start-mysql
mysql -u root -e "CREATE DATABASE myapp;"
```

To set up a PostgreSQL database:
```bash
/usr/local/bin/start-postgres
createdb myapp
```

Remember: If you encounter database connection errors, the most likely cause is that the service isn't running. Start it first!